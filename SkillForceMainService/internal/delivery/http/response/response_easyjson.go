// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package response

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	dto "skillForce/internal/models/dto"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse(in *jlexer.Lexer, out *UserProfileResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			if in.IsNull() {
				in.Skip()
				out.UserProfile = nil
			} else {
				if out.UserProfile == nil {
					out.UserProfile = new(dto.UserProfileDTO)
				}
				(*out.UserProfile).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse(out *jwriter.Writer, in UserProfileResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		if in.UserProfile == nil {
			out.RawString("null")
		} else {
			(*in.UserProfile).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserProfileResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserProfileResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserProfileResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserProfileResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse1(in *jlexer.Lexer, out *TestResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "test":
			if in.IsNull() {
				in.Skip()
				out.Test = nil
			} else {
				if out.Test == nil {
					out.Test = new(dto.Test)
				}
				(*out.Test).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse1(out *jwriter.Writer, in TestResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"test\":"
		out.RawString(prefix[1:])
		if in.Test == nil {
			out.RawString("null")
		} else {
			(*in.Test).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TestResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TestResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TestResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TestResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse1(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse2(in *jlexer.Lexer, out *SurveyResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "survey":
			if in.IsNull() {
				in.Skip()
				out.Survey = nil
			} else {
				if out.Survey == nil {
					out.Survey = new(dto.SurveyDTO)
				}
				(*out.Survey).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse2(out *jwriter.Writer, in SurveyResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"survey\":"
		out.RawString(prefix[1:])
		if in.Survey == nil {
			out.RawString("null")
		} else {
			(*in.Survey).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SurveyResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SurveyResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SurveyResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SurveyResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse2(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse3(in *jlexer.Lexer, out *SurveyMetricsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "survey_metrics":
			if in.IsNull() {
				in.Skip()
				out.SurveyMetrics = nil
			} else {
				if out.SurveyMetrics == nil {
					out.SurveyMetrics = new(dto.SurveyMetricsDTO)
				}
				(*out.SurveyMetrics).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse3(out *jwriter.Writer, in SurveyMetricsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"survey_metrics\":"
		out.RawString(prefix[1:])
		if in.SurveyMetrics == nil {
			out.RawString("null")
		} else {
			(*in.SurveyMetrics).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SurveyMetricsResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SurveyMetricsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SurveyMetricsResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SurveyMetricsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse3(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse4(in *jlexer.Lexer, out *StatisticResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "statistic":
			if in.IsNull() {
				in.Skip()
				out.Statistic = nil
			} else {
				if out.Statistic == nil {
					out.Statistic = new(dto.UserStats)
				}
				(*out.Statistic).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse4(out *jwriter.Writer, in StatisticResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"statistic\":"
		out.RawString(prefix[1:])
		if in.Statistic == nil {
			out.RawString("null")
		} else {
			(*in.Statistic).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v StatisticResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v StatisticResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *StatisticResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *StatisticResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse4(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse5(in *jlexer.Lexer, out *SertificateUrlResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.Url = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse5(out *jwriter.Writer, in SertificateUrlResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix[1:])
		out.String(string(in.Url))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SertificateUrlResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SertificateUrlResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SertificateUrlResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SertificateUrlResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse5(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse6(in *jlexer.Lexer, out *Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "result":
			out.Result = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse6(out *jwriter.Writer, in Result) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Result))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse6(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse7(in *jlexer.Lexer, out *RaitingResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "course_raiting":
			if in.IsNull() {
				in.Skip()
				out.Raiting = nil
			} else {
				if out.Raiting == nil {
					out.Raiting = new(dto.Raiting)
				}
				(*out.Raiting).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse7(out *jwriter.Writer, in RaitingResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"course_raiting\":"
		out.RawString(prefix[1:])
		if in.Raiting == nil {
			out.RawString("null")
		} else {
			(*in.Raiting).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RaitingResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RaitingResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RaitingResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RaitingResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse7(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse8(in *jlexer.Lexer, out *QuestionTestResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "question":
			if in.IsNull() {
				in.Skip()
				out.Question = nil
			} else {
				if out.Question == nil {
					out.Question = new(dto.QuestionTest)
				}
				(*out.Question).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse8(out *jwriter.Writer, in QuestionTestResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"question\":"
		out.RawString(prefix[1:])
		if in.Question == nil {
			out.RawString("null")
		} else {
			(*in.Question).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v QuestionTestResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v QuestionTestResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *QuestionTestResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *QuestionTestResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse8(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse9(in *jlexer.Lexer, out *PhotoUrlResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.Url = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse9(out *jwriter.Writer, in PhotoUrlResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix[1:])
		out.String(string(in.Url))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PhotoUrlResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PhotoUrlResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PhotoUrlResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PhotoUrlResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse9(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse10(in *jlexer.Lexer, out *LessonResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "lesson":
			if in.IsNull() {
				in.Skip()
				out.Lesson = nil
			} else {
				if out.Lesson == nil {
					out.Lesson = new(dto.LessonDTO)
				}
				(*out.Lesson).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse10(out *jwriter.Writer, in LessonResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"lesson\":"
		out.RawString(prefix[1:])
		if in.Lesson == nil {
			out.RawString("null")
		} else {
			(*in.Lesson).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v LessonResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v LessonResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *LessonResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *LessonResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse10(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse11(in *jlexer.Lexer, out *LessonBodyResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "lesson_body":
			if in.IsNull() {
				in.Skip()
				out.LessonBody = nil
			} else {
				if out.LessonBody == nil {
					out.LessonBody = new(dto.LessonDtoBody)
				}
				(*out.LessonBody).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse11(out *jwriter.Writer, in LessonBodyResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"lesson_body\":"
		out.RawString(prefix[1:])
		if in.LessonBody == nil {
			out.RawString("null")
		} else {
			(*in.LessonBody).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v LessonBodyResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v LessonBodyResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *LessonBodyResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *LessonBodyResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse11(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse12(in *jlexer.Lexer, out *ErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			out.ErrorStr = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse12(out *jwriter.Writer, in ErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix[1:])
		out.String(string(in.ErrorStr))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse12(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse13(in *jlexer.Lexer, out *CourseRoadmapResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "course_roadmap":
			if in.IsNull() {
				in.Skip()
				out.CourseRoadmap = nil
			} else {
				if out.CourseRoadmap == nil {
					out.CourseRoadmap = new(dto.CourseRoadmapDTO)
				}
				(*out.CourseRoadmap).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse13(out *jwriter.Writer, in CourseRoadmapResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"course_roadmap\":"
		out.RawString(prefix[1:])
		if in.CourseRoadmap == nil {
			out.RawString("null")
		} else {
			(*in.CourseRoadmap).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CourseRoadmapResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CourseRoadmapResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CourseRoadmapResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CourseRoadmapResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse13(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse14(in *jlexer.Lexer, out *CourseResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "course":
			if in.IsNull() {
				in.Skip()
				out.Course = nil
			} else {
				if out.Course == nil {
					out.Course = new(dto.CourseDTO)
				}
				(*out.Course).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse14(out *jwriter.Writer, in CourseResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"course\":"
		out.RawString(prefix[1:])
		if in.Course == nil {
			out.RawString("null")
		} else {
			(*in.Course).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CourseResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CourseResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CourseResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CourseResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse14(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse15(in *jlexer.Lexer, out *BucketCoursesResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "bucket_courses":
			if in.IsNull() {
				in.Skip()
				out.BucketCourses = nil
			} else {
				in.Delim('[')
				if out.BucketCourses == nil {
					if !in.IsDelim(']') {
						out.BucketCourses = make([]*dto.CourseDTO, 0, 8)
					} else {
						out.BucketCourses = []*dto.CourseDTO{}
					}
				} else {
					out.BucketCourses = (out.BucketCourses)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *dto.CourseDTO
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(dto.CourseDTO)
						}
						(*v1).UnmarshalEasyJSON(in)
					}
					out.BucketCourses = append(out.BucketCourses, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse15(out *jwriter.Writer, in BucketCoursesResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"bucket_courses\":"
		out.RawString(prefix[1:])
		if in.BucketCourses == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.BucketCourses {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					(*v3).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BucketCoursesResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BucketCoursesResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BucketCoursesResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BucketCoursesResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse15(l, v)
}
func easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse16(in *jlexer.Lexer, out *Billing) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "continue_url":
			out.Continue_url = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse16(out *jwriter.Writer, in Billing) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"continue_url\":"
		out.RawString(prefix[1:])
		out.String(string(in.Continue_url))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Billing) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Billing) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson6ff3ac1dEncodeSkillForceInternalDeliveryHttpResponse16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Billing) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Billing) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson6ff3ac1dDecodeSkillForceInternalDeliveryHttpResponse16(l, v)
}
