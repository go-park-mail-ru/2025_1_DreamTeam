// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: course.proto

package coursepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Course Structure
type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Price       int32         `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	CreatorId   int32         `protobuf:"varint,3,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	TimeToPass  int32         `protobuf:"varint,4,opt,name=time_to_pass,json=timeToPass,proto3" json:"time_to_pass,omitempty"`
	Title       string        `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description string        `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ScrImage    string        `protobuf:"bytes,7,opt,name=scr_image,json=scrImage,proto3" json:"scr_image,omitempty"`
	Parts       []*CoursePart `protobuf:"bytes,8,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *Course) Reset() {
	*x = Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{0}
}

func (x *Course) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Course) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Course) GetCreatorId() int32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *Course) GetTimeToPass() int32 {
	if x != nil {
		return x.TimeToPass
	}
	return 0
}

func (x *Course) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Course) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Course) GetScrImage() string {
	if x != nil {
		return x.ScrImage
	}
	return ""
}

func (x *Course) GetParts() []*CoursePart {
	if x != nil {
		return x.Parts
	}
	return nil
}

type CoursePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Order   int32           `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Title   string          `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Buckets []*LessonBucket `protobuf:"bytes,4,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *CoursePart) Reset() {
	*x = CoursePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoursePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoursePart) ProtoMessage() {}

func (x *CoursePart) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoursePart.ProtoReflect.Descriptor instead.
func (*CoursePart) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{1}
}

func (x *CoursePart) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoursePart) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CoursePart) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CoursePart) GetBuckets() []*LessonBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type LessonBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Order   int32          `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Title   string         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	PartId  int32          `protobuf:"varint,4,opt,name=part_id,json=partId,proto3" json:"part_id,omitempty"`
	Lessons []*LessonPoint `protobuf:"bytes,5,rep,name=lessons,proto3" json:"lessons,omitempty"`
}

func (x *LessonBucket) Reset() {
	*x = LessonBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonBucket) ProtoMessage() {}

func (x *LessonBucket) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonBucket.ProtoReflect.Descriptor instead.
func (*LessonBucket) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{2}
}

func (x *LessonBucket) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LessonBucket) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *LessonBucket) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonBucket) GetPartId() int32 {
	if x != nil {
		return x.PartId
	}
	return 0
}

func (x *LessonBucket) GetLessons() []*LessonPoint {
	if x != nil {
		return x.Lessons
	}
	return nil
}

type LessonPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32  `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	IsDone   bool   `protobuf:"varint,5,opt,name=is_done,json=isDone,proto3" json:"is_done,omitempty"`
	IsImage  bool   `protobuf:"varint,6,opt,name=is_image,json=isImage,proto3" json:"is_image,omitempty"`
	BucketId int32  `protobuf:"varint,7,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	Order    int32  `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *LessonPoint) Reset() {
	*x = LessonPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPoint) ProtoMessage() {}

func (x *LessonPoint) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPoint.ProtoReflect.Descriptor instead.
func (*LessonPoint) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{3}
}

func (x *LessonPoint) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *LessonPoint) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonPoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPoint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LessonPoint) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

func (x *LessonPoint) GetIsImage() bool {
	if x != nil {
		return x.IsImage
	}
	return false
}

func (x *LessonPoint) GetBucketId() int32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

func (x *LessonPoint) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

// Requests/Responses
type GetBucketCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
}

func (x *GetBucketCoursesRequest) Reset() {
	*x = GetBucketCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketCoursesRequest) ProtoMessage() {}

func (x *GetBucketCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketCoursesRequest.ProtoReflect.Descriptor instead.
func (*GetBucketCoursesRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{4}
}

func (x *GetBucketCoursesRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type GetBucketCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*CourseDTO `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetBucketCoursesResponse) Reset() {
	*x = GetBucketCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketCoursesResponse) ProtoMessage() {}

func (x *GetBucketCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketCoursesResponse.ProtoReflect.Descriptor instead.
func (*GetBucketCoursesResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{5}
}

func (x *GetBucketCoursesResponse) GetCourses() []*CourseDTO {
	if x != nil {
		return x.Courses
	}
	return nil
}

type GetCourseLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId int32 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetCourseLessonRequest) Reset() {
	*x = GetCourseLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseLessonRequest) ProtoMessage() {}

func (x *GetCourseLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseLessonRequest.ProtoReflect.Descriptor instead.
func (*GetCourseLessonRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{6}
}

func (x *GetCourseLessonRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetCourseLessonRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type GetCourseLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lesson *LessonDTO `protobuf:"bytes,1,opt,name=lesson,proto3" json:"lesson,omitempty"`
}

func (x *GetCourseLessonResponse) Reset() {
	*x = GetCourseLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseLessonResponse) ProtoMessage() {}

func (x *GetCourseLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseLessonResponse.ProtoReflect.Descriptor instead.
func (*GetCourseLessonResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{7}
}

func (x *GetCourseLessonResponse) GetLesson() *LessonDTO {
	if x != nil {
		return x.Lesson
	}
	return nil
}

type GetNextLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId int32 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	LessonId int32 `protobuf:"varint,3,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *GetNextLessonRequest) Reset() {
	*x = GetNextLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextLessonRequest) ProtoMessage() {}

func (x *GetNextLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextLessonRequest.ProtoReflect.Descriptor instead.
func (*GetNextLessonRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{8}
}

func (x *GetNextLessonRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetNextLessonRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetNextLessonRequest) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

type GetNextLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lesson *LessonDTO `protobuf:"bytes,1,opt,name=lesson,proto3" json:"lesson,omitempty"`
}

func (x *GetNextLessonResponse) Reset() {
	*x = GetNextLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextLessonResponse) ProtoMessage() {}

func (x *GetNextLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextLessonResponse.ProtoReflect.Descriptor instead.
func (*GetNextLessonResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{9}
}

func (x *GetNextLessonResponse) GetLesson() *LessonDTO {
	if x != nil {
		return x.Lesson
	}
	return nil
}

type MarkLessonAsNotCompletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LessonId int32 `protobuf:"varint,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *MarkLessonAsNotCompletedRequest) Reset() {
	*x = MarkLessonAsNotCompletedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkLessonAsNotCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkLessonAsNotCompletedRequest) ProtoMessage() {}

func (x *MarkLessonAsNotCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkLessonAsNotCompletedRequest.ProtoReflect.Descriptor instead.
func (*MarkLessonAsNotCompletedRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{10}
}

func (x *MarkLessonAsNotCompletedRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MarkLessonAsNotCompletedRequest) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

type MarkLessonAsCompletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LessonId int32 `protobuf:"varint,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *MarkLessonAsCompletedRequest) Reset() {
	*x = MarkLessonAsCompletedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkLessonAsCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkLessonAsCompletedRequest) ProtoMessage() {}

func (x *MarkLessonAsCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkLessonAsCompletedRequest.ProtoReflect.Descriptor instead.
func (*MarkLessonAsCompletedRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{11}
}

func (x *MarkLessonAsCompletedRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MarkLessonAsCompletedRequest) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

type MarkCourseAsCompletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId int32 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *MarkCourseAsCompletedRequest) Reset() {
	*x = MarkCourseAsCompletedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkCourseAsCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkCourseAsCompletedRequest) ProtoMessage() {}

func (x *MarkCourseAsCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkCourseAsCompletedRequest.ProtoReflect.Descriptor instead.
func (*MarkCourseAsCompletedRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{12}
}

func (x *MarkCourseAsCompletedRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MarkCourseAsCompletedRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type GetCourseRoadmapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId int32 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetCourseRoadmapRequest) Reset() {
	*x = GetCourseRoadmapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseRoadmapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseRoadmapRequest) ProtoMessage() {}

func (x *GetCourseRoadmapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseRoadmapRequest.ProtoReflect.Descriptor instead.
func (*GetCourseRoadmapRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{13}
}

func (x *GetCourseRoadmapRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetCourseRoadmapRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type GetCourseRoadmapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roadmap *CourseRoadmapDTO `protobuf:"bytes,1,opt,name=roadmap,proto3" json:"roadmap,omitempty"`
}

func (x *GetCourseRoadmapResponse) Reset() {
	*x = GetCourseRoadmapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseRoadmapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseRoadmapResponse) ProtoMessage() {}

func (x *GetCourseRoadmapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseRoadmapResponse.ProtoReflect.Descriptor instead.
func (*GetCourseRoadmapResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{14}
}

func (x *GetCourseRoadmapResponse) GetRoadmap() *CourseRoadmapDTO {
	if x != nil {
		return x.Roadmap
	}
	return nil
}

type GetCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseId    int32        `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	UserProfile *UserProfile `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
}

func (x *GetCourseRequest) Reset() {
	*x = GetCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseRequest) ProtoMessage() {}

func (x *GetCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseRequest.ProtoReflect.Descriptor instead.
func (*GetCourseRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{15}
}

func (x *GetCourseRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *GetCourseRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type GetCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course *CourseDTO `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
}

func (x *GetCourseResponse) Reset() {
	*x = GetCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseResponse) ProtoMessage() {}

func (x *GetCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseResponse.ProtoReflect.Descriptor instead.
func (*GetCourseResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{16}
}

func (x *GetCourseResponse) GetCourse() *CourseDTO {
	if x != nil {
		return x.Course
	}
	return nil
}

type CreateCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course      *CourseDTO   `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	UserProfile *UserProfile `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
}

func (x *CreateCourseRequest) Reset() {
	*x = CreateCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourseRequest) ProtoMessage() {}

func (x *CreateCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourseRequest.ProtoReflect.Descriptor instead.
func (*CreateCourseRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCourseRequest) GetCourse() *CourseDTO {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *CreateCourseRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type AddToFavouritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course      *CourseDTO   `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	UserProfile *UserProfile `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
}

func (x *AddToFavouritesRequest) Reset() {
	*x = AddToFavouritesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToFavouritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToFavouritesRequest) ProtoMessage() {}

func (x *AddToFavouritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToFavouritesRequest.ProtoReflect.Descriptor instead.
func (*AddToFavouritesRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{18}
}

func (x *AddToFavouritesRequest) GetCourse() *CourseDTO {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *AddToFavouritesRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type DeleteCourseFromFavouritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course      *CourseDTO   `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"`
	UserProfile *UserProfile `protobuf:"bytes,2,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
}

func (x *DeleteCourseFromFavouritesRequest) Reset() {
	*x = DeleteCourseFromFavouritesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCourseFromFavouritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCourseFromFavouritesRequest) ProtoMessage() {}

func (x *DeleteCourseFromFavouritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCourseFromFavouritesRequest.ProtoReflect.Descriptor instead.
func (*DeleteCourseFromFavouritesRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteCourseFromFavouritesRequest) GetCourse() *CourseDTO {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *DeleteCourseFromFavouritesRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type GetFavouritesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
}

func (x *GetFavouritesRequest) Reset() {
	*x = GetFavouritesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavouritesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavouritesRequest) ProtoMessage() {}

func (x *GetFavouritesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavouritesRequest.ProtoReflect.Descriptor instead.
func (*GetFavouritesRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{20}
}

func (x *GetFavouritesRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type GetFavouritesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*CourseDTO `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetFavouritesResponse) Reset() {
	*x = GetFavouritesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFavouritesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavouritesResponse) ProtoMessage() {}

func (x *GetFavouritesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavouritesResponse.ProtoReflect.Descriptor instead.
func (*GetFavouritesResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{21}
}

func (x *GetFavouritesResponse) GetCourses() []*CourseDTO {
	if x != nil {
		return x.Courses
	}
	return nil
}

// DTOs
type CourseDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Price           int32            `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	PurchasesAmount int32            `protobuf:"varint,3,opt,name=purchases_amount,json=purchasesAmount,proto3" json:"purchases_amount,omitempty"`
	CreatorId       int32            `protobuf:"varint,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	TimeToPass      int32            `protobuf:"varint,5,opt,name=time_to_pass,json=timeToPass,proto3" json:"time_to_pass,omitempty"`
	Rating          float32          `protobuf:"fixed32,6,opt,name=rating,proto3" json:"rating,omitempty"`
	Tags            []string         `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Title           string           `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	Description     string           `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	ScrImage        string           `protobuf:"bytes,10,opt,name=scr_image,json=scrImage,proto3" json:"scr_image,omitempty"`
	IsPurchased     bool             `protobuf:"varint,11,opt,name=is_purchased,json=isPurchased,proto3" json:"is_purchased,omitempty"`
	IsCompleted     bool             `protobuf:"varint,12,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	Parts           []*CoursePartDTO `protobuf:"bytes,13,rep,name=parts,proto3" json:"parts,omitempty"`
	IsFavorite      bool             `protobuf:"varint,14,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
}

func (x *CourseDTO) Reset() {
	*x = CourseDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseDTO) ProtoMessage() {}

func (x *CourseDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseDTO.ProtoReflect.Descriptor instead.
func (*CourseDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{22}
}

func (x *CourseDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseDTO) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CourseDTO) GetPurchasesAmount() int32 {
	if x != nil {
		return x.PurchasesAmount
	}
	return 0
}

func (x *CourseDTO) GetCreatorId() int32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CourseDTO) GetTimeToPass() int32 {
	if x != nil {
		return x.TimeToPass
	}
	return 0
}

func (x *CourseDTO) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CourseDTO) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CourseDTO) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseDTO) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CourseDTO) GetScrImage() string {
	if x != nil {
		return x.ScrImage
	}
	return ""
}

func (x *CourseDTO) GetIsPurchased() bool {
	if x != nil {
		return x.IsPurchased
	}
	return false
}

func (x *CourseDTO) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *CourseDTO) GetParts() []*CoursePartDTO {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *CourseDTO) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type CourseRoadmapDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parts []*CoursePartDTO `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *CourseRoadmapDTO) Reset() {
	*x = CourseRoadmapDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseRoadmapDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseRoadmapDTO) ProtoMessage() {}

func (x *CourseRoadmapDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseRoadmapDTO.ProtoReflect.Descriptor instead.
func (*CourseRoadmapDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{23}
}

func (x *CourseRoadmapDTO) GetParts() []*CoursePartDTO {
	if x != nil {
		return x.Parts
	}
	return nil
}

type CoursePartDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Buckets []*LessonBucketDTO `protobuf:"bytes,3,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *CoursePartDTO) Reset() {
	*x = CoursePartDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoursePartDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoursePartDTO) ProtoMessage() {}

func (x *CoursePartDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoursePartDTO.ProtoReflect.Descriptor instead.
func (*CoursePartDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{24}
}

func (x *CoursePartDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoursePartDTO) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CoursePartDTO) GetBuckets() []*LessonBucketDTO {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type LessonBucketDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title   string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Lessons []*LessonPointDTO `protobuf:"bytes,3,rep,name=lessons,proto3" json:"lessons,omitempty"`
}

func (x *LessonBucketDTO) Reset() {
	*x = LessonBucketDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonBucketDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonBucketDTO) ProtoMessage() {}

func (x *LessonBucketDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonBucketDTO.ProtoReflect.Descriptor instead.
func (*LessonBucketDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{25}
}

func (x *LessonBucketDTO) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LessonBucketDTO) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonBucketDTO) GetLessons() []*LessonPointDTO {
	if x != nil {
		return x.Lessons
	}
	return nil
}

type LessonPointDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32  `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	IsDone   bool   `protobuf:"varint,5,opt,name=is_done,json=isDone,proto3" json:"is_done,omitempty"`
}

func (x *LessonPointDTO) Reset() {
	*x = LessonPointDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonPointDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonPointDTO) ProtoMessage() {}

func (x *LessonPointDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonPointDTO.ProtoReflect.Descriptor instead.
func (*LessonPointDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{26}
}

func (x *LessonPointDTO) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *LessonPointDTO) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LessonPointDTO) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonPointDTO) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LessonPointDTO) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

type LessonDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *LessonDtoHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   *LessonDtoBody   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *LessonDTO) Reset() {
	*x = LessonDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonDTO) ProtoMessage() {}

func (x *LessonDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonDTO.ProtoReflect.Descriptor instead.
func (*LessonDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{27}
}

func (x *LessonDTO) GetHeader() *LessonDtoHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *LessonDTO) GetBody() *LessonDtoBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type LessonDtoHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseTitle string   `protobuf:"bytes,1,opt,name=course_title,json=courseTitle,proto3" json:"course_title,omitempty"`
	CourseId    int32    `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
	Part        *Part    `protobuf:"bytes,3,opt,name=part,proto3" json:"part,omitempty"`
	Bucket      *Bucket  `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Points      []*Point `protobuf:"bytes,5,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *LessonDtoHeader) Reset() {
	*x = LessonDtoHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonDtoHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonDtoHeader) ProtoMessage() {}

func (x *LessonDtoHeader) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonDtoHeader.ProtoReflect.Descriptor instead.
func (*LessonDtoHeader) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{28}
}

func (x *LessonDtoHeader) GetCourseTitle() string {
	if x != nil {
		return x.CourseTitle
	}
	return ""
}

func (x *LessonDtoHeader) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *LessonDtoHeader) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

func (x *LessonDtoHeader) GetBucket() *Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *LessonDtoHeader) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

type Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order int32  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Part) Reset() {
	*x = Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Part) ProtoMessage() {}

func (x *Part) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Part.ProtoReflect.Descriptor instead.
func (*Part) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{29}
}

func (x *Part) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Part) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order int32  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{30}
}

func (x *Bucket) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Bucket) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32  `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	IsDone   bool   `protobuf:"varint,3,opt,name=is_done,json=isDone,proto3" json:"is_done,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{31}
}

func (x *Point) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *Point) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Point) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

type LessonDtoBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Footer *Footer  `protobuf:"bytes,2,opt,name=footer,proto3" json:"footer,omitempty"`
}

func (x *LessonDtoBody) Reset() {
	*x = LessonDtoBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LessonDtoBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonDtoBody) ProtoMessage() {}

func (x *LessonDtoBody) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonDtoBody.ProtoReflect.Descriptor instead.
func (*LessonDtoBody) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{32}
}

func (x *LessonDtoBody) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *LessonDtoBody) GetFooter() *Footer {
	if x != nil {
		return x.Footer
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{33}
}

func (x *Block) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type Footer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextLessonId     int32 `protobuf:"varint,1,opt,name=next_lesson_id,json=nextLessonId,proto3" json:"next_lesson_id,omitempty"`
	CurrentLessonId  int32 `protobuf:"varint,2,opt,name=current_lesson_id,json=currentLessonId,proto3" json:"current_lesson_id,omitempty"`
	PreviousLessonId int32 `protobuf:"varint,3,opt,name=previous_lesson_id,json=previousLessonId,proto3" json:"previous_lesson_id,omitempty"`
}

func (x *Footer) Reset() {
	*x = Footer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Footer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Footer) ProtoMessage() {}

func (x *Footer) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Footer.ProtoReflect.Descriptor instead.
func (*Footer) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{34}
}

func (x *Footer) GetNextLessonId() int32 {
	if x != nil {
		return x.NextLessonId
	}
	return 0
}

func (x *Footer) GetCurrentLessonId() int32 {
	if x != nil {
		return x.CurrentLessonId
	}
	return 0
}

func (x *Footer) GetPreviousLessonId() int32 {
	if x != nil {
		return x.PreviousLessonId
	}
	return 0
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Bio       string `protobuf:"bytes,4,opt,name=bio,proto3" json:"bio,omitempty"`
	AvatarSrc string `protobuf:"bytes,5,opt,name=avatar_src,json=avatarSrc,proto3" json:"avatar_src,omitempty"`
	HideEmail bool   `protobuf:"varint,6,opt,name=hide_email,json=hideEmail,proto3" json:"hide_email,omitempty"`
	IsAdmin   bool   `protobuf:"varint,7,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{35}
}

func (x *UserProfile) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserProfile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *UserProfile) GetAvatarSrc() string {
	if x != nil {
		return x.AvatarSrc
	}
	return ""
}

func (x *UserProfile) GetHideEmail() bool {
	if x != nil {
		return x.HideEmail
	}
	return false
}

func (x *UserProfile) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type GetVideoUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32 `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *GetVideoUrlRequest) Reset() {
	*x = GetVideoUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoUrlRequest) ProtoMessage() {}

func (x *GetVideoUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoUrlRequest.ProtoReflect.Descriptor instead.
func (*GetVideoUrlRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{36}
}

func (x *GetVideoUrlRequest) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

type GetVideoUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetVideoUrlResponse) Reset() {
	*x = GetVideoUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoUrlResponse) ProtoMessage() {}

func (x *GetVideoUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoUrlResponse.ProtoReflect.Descriptor instead.
func (*GetVideoUrlResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{37}
}

func (x *GetVideoUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetMetaRequest) Reset() {
	*x = GetMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaRequest) ProtoMessage() {}

func (x *GetMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaRequest.ProtoReflect.Descriptor instead.
func (*GetMetaRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{38}
}

func (x *GetMetaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VideoMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *VideoMeta) Reset() {
	*x = VideoMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMeta) ProtoMessage() {}

func (x *VideoMeta) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMeta.ProtoReflect.Descriptor instead.
func (*VideoMeta) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{39}
}

func (x *VideoMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VideoMeta) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetFragmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Start int64  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End   int64  `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GetFragmentRequest) Reset() {
	*x = GetFragmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFragmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFragmentRequest) ProtoMessage() {}

func (x *GetFragmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFragmentRequest.ProtoReflect.Descriptor instead.
func (*GetFragmentRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{40}
}

func (x *GetFragmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetFragmentRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GetFragmentRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type VideoFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *VideoFragment) Reset() {
	*x = VideoFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoFragment) ProtoMessage() {}

func (x *VideoFragment) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoFragment.ProtoReflect.Descriptor instead.
func (*VideoFragment) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{41}
}

func (x *VideoFragment) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type AnswerTestDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerId int32  `protobuf:"varint,1,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	Answer   string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	IsRight  bool   `protobuf:"varint,3,opt,name=is_right,json=isRight,proto3" json:"is_right,omitempty"`
}

func (x *AnswerTestDTO) Reset() {
	*x = AnswerTestDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerTestDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerTestDTO) ProtoMessage() {}

func (x *AnswerTestDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerTestDTO.ProtoReflect.Descriptor instead.
func (*AnswerTestDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{42}
}

func (x *AnswerTestDTO) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *AnswerTestDTO) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *AnswerTestDTO) GetIsRight() bool {
	if x != nil {
		return x.IsRight
	}
	return false
}

type TestDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32            `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	Question   string           `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answers    []*AnswerTestDTO `protobuf:"bytes,3,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *TestDTO) Reset() {
	*x = TestDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDTO) ProtoMessage() {}

func (x *TestDTO) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDTO.ProtoReflect.Descriptor instead.
func (*TestDTO) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{43}
}

func (x *TestDTO) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *TestDTO) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *TestDTO) GetAnswers() []*AnswerTestDTO {
	if x != nil {
		return x.Answers
	}
	return nil
}

type UserAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRight    bool  `protobuf:"varint,1,opt,name=is_right,json=isRight,proto3" json:"is_right,omitempty"`
	QuestionId int32 `protobuf:"varint,2,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	AnswerId   int32 `protobuf:"varint,3,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
}

func (x *UserAnswer) Reset() {
	*x = UserAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAnswer) ProtoMessage() {}

func (x *UserAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAnswer.ProtoReflect.Descriptor instead.
func (*UserAnswer) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{44}
}

func (x *UserAnswer) GetIsRight() bool {
	if x != nil {
		return x.IsRight
	}
	return false
}

func (x *UserAnswer) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *UserAnswer) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

type GetTestLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32 `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	UserId   int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetTestLessonRequest) Reset() {
	*x = GetTestLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestLessonRequest) ProtoMessage() {}

func (x *GetTestLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestLessonRequest.ProtoReflect.Descriptor instead.
func (*GetTestLessonRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{45}
}

func (x *GetTestLessonRequest) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *GetTestLessonRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetTestLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestDTO    *TestDTO    `protobuf:"bytes,1,opt,name=TestDTO,proto3" json:"TestDTO,omitempty"`
	UserAnswer *UserAnswer `protobuf:"bytes,2,opt,name=UserAnswer,proto3" json:"UserAnswer,omitempty"`
}

func (x *GetTestLessonResponse) Reset() {
	*x = GetTestLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestLessonResponse) ProtoMessage() {}

func (x *GetTestLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestLessonResponse.ProtoReflect.Descriptor instead.
func (*GetTestLessonResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{46}
}

func (x *GetTestLessonResponse) GetTestDTO() *TestDTO {
	if x != nil {
		return x.TestDTO
	}
	return nil
}

func (x *GetTestLessonResponse) GetUserAnswer() *UserAnswer {
	if x != nil {
		return x.UserAnswer
	}
	return nil
}

type AnswerQuizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32 `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	AnswerId   int32 `protobuf:"varint,2,opt,name=answer_id,json=answerId,proto3" json:"answer_id,omitempty"`
	UserId     int32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId   int32 `protobuf:"varint,4,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *AnswerQuizRequest) Reset() {
	*x = AnswerQuizRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerQuizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerQuizRequest) ProtoMessage() {}

func (x *AnswerQuizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerQuizRequest.ProtoReflect.Descriptor instead.
func (*AnswerQuizRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{47}
}

func (x *AnswerQuizRequest) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *AnswerQuizRequest) GetAnswerId() int32 {
	if x != nil {
		return x.AnswerId
	}
	return 0
}

func (x *AnswerQuizRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AnswerQuizRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type AnswerQuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRight bool `protobuf:"varint,1,opt,name=is_right,json=isRight,proto3" json:"is_right,omitempty"`
}

func (x *AnswerQuizResponse) Reset() {
	*x = AnswerQuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerQuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerQuizResponse) ProtoMessage() {}

func (x *AnswerQuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerQuizResponse.ProtoReflect.Descriptor instead.
func (*AnswerQuizResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{48}
}

func (x *AnswerQuizResponse) GetIsRight() bool {
	if x != nil {
		return x.IsRight
	}
	return false
}

type GetQuestionTestLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32 `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	UserId   int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetQuestionTestLessonRequest) Reset() {
	*x = GetQuestionTestLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionTestLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionTestLessonRequest) ProtoMessage() {}

func (x *GetQuestionTestLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionTestLessonRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionTestLessonRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{49}
}

func (x *GetQuestionTestLessonRequest) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *GetQuestionTestLessonRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserAnswerQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Answer string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *UserAnswerQuestion) Reset() {
	*x = UserAnswerQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAnswerQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAnswerQuestion) ProtoMessage() {}

func (x *UserAnswerQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAnswerQuestion.ProtoReflect.Descriptor instead.
func (*UserAnswerQuestion) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{50}
}

func (x *UserAnswerQuestion) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserAnswerQuestion) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type GetQuestionTestLessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32               `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	Question   string              `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	UserAnswer *UserAnswerQuestion `protobuf:"bytes,3,opt,name=user_answer,json=userAnswer,proto3" json:"user_answer,omitempty"`
}

func (x *GetQuestionTestLessonResponse) Reset() {
	*x = GetQuestionTestLessonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuestionTestLessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionTestLessonResponse) ProtoMessage() {}

func (x *GetQuestionTestLessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionTestLessonResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionTestLessonResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{51}
}

func (x *GetQuestionTestLessonResponse) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *GetQuestionTestLessonResponse) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *GetQuestionTestLessonResponse) GetUserAnswer() *UserAnswerQuestion {
	if x != nil {
		return x.UserAnswer
	}
	return nil
}

type AnswerQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId int32  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	UserId     int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Answer     string `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *AnswerQuestionRequest) Reset() {
	*x = AnswerQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerQuestionRequest) ProtoMessage() {}

func (x *AnswerQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerQuestionRequest.ProtoReflect.Descriptor instead.
func (*AnswerQuestionRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{52}
}

func (x *AnswerQuestionRequest) GetQuestionId() int32 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *AnswerQuestionRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AnswerQuestionRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type SearchCoursesByTitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	Keywords    string       `protobuf:"bytes,2,opt,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *SearchCoursesByTitleRequest) Reset() {
	*x = SearchCoursesByTitleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCoursesByTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCoursesByTitleRequest) ProtoMessage() {}

func (x *SearchCoursesByTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCoursesByTitleRequest.ProtoReflect.Descriptor instead.
func (*SearchCoursesByTitleRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{53}
}

func (x *SearchCoursesByTitleRequest) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

func (x *SearchCoursesByTitleRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type GetRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId int32 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetRatingRequest) Reset() {
	*x = GetRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatingRequest) ProtoMessage() {}

func (x *GetRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatingRequest.ProtoReflect.Descriptor instead.
func (*GetRatingRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{54}
}

func (x *GetRatingRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRatingRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type GetRatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating []*RatingItem `protobuf:"bytes,1,rep,name=rating,proto3" json:"rating,omitempty"`
}

func (x *GetRatingResponse) Reset() {
	*x = GetRatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatingResponse) ProtoMessage() {}

func (x *GetRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatingResponse.ProtoReflect.Descriptor instead.
func (*GetRatingResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{55}
}

func (x *GetRatingResponse) GetRating() []*RatingItem {
	if x != nil {
		return x.Rating
	}
	return nil
}

type RatingItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   *UserProfile `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Rating int32        `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *RatingItem) Reset() {
	*x = RatingItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingItem) ProtoMessage() {}

func (x *RatingItem) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingItem.ProtoReflect.Descriptor instead.
func (*RatingItem) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{56}
}

func (x *RatingItem) GetUser() *UserProfile {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RatingItem) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type GetSertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *UserProfile `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	CourseId int32        `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetSertificateRequest) Reset() {
	*x = GetSertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSertificateRequest) ProtoMessage() {}

func (x *GetSertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSertificateRequest.ProtoReflect.Descriptor instead.
func (*GetSertificateRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{57}
}

func (x *GetSertificateRequest) GetUser() *UserProfile {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetSertificateRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type GetSertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SertificateUrl string `protobuf:"bytes,1,opt,name=sertificate_url,json=sertificateUrl,proto3" json:"sertificate_url,omitempty"`
}

func (x *GetSertificateResponse) Reset() {
	*x = GetSertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSertificateResponse) ProtoMessage() {}

func (x *GetSertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSertificateResponse.ProtoReflect.Descriptor instead.
func (*GetSertificateResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{58}
}

func (x *GetSertificateResponse) GetSertificateUrl() string {
	if x != nil {
		return x.SertificateUrl
	}
	return ""
}

type GetStatisticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CourseId int32 `protobuf:"varint,2,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`
}

func (x *GetStatisticRequest) Reset() {
	*x = GetStatisticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticRequest) ProtoMessage() {}

func (x *GetStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticRequest.ProtoReflect.Descriptor instead.
func (*GetStatisticRequest) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{59}
}

func (x *GetStatisticRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetStatisticRequest) GetCourseId() int32 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type GetStatisticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage            int32 `protobuf:"varint,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	CompletedTextLessons  int32 `protobuf:"varint,2,opt,name=completed_text_lessons,json=completedTextLessons,proto3" json:"completed_text_lessons,omitempty"`
	AmountTextLessons     int32 `protobuf:"varint,3,opt,name=amount_text_lessons,json=amountTextLessons,proto3" json:"amount_text_lessons,omitempty"`
	CompletedVideoLessons int32 `protobuf:"varint,4,opt,name=completed_video_lessons,json=completedVideoLessons,proto3" json:"completed_video_lessons,omitempty"`
	AmountVideoLessons    int32 `protobuf:"varint,5,opt,name=amount_video_lessons,json=amountVideoLessons,proto3" json:"amount_video_lessons,omitempty"`
	ReceivedPoints        int32 `protobuf:"varint,6,opt,name=received_points,json=receivedPoints,proto3" json:"received_points,omitempty"`
	AmountPoints          int32 `protobuf:"varint,7,opt,name=amount_points,json=amountPoints,proto3" json:"amount_points,omitempty"`
	CompletedTests        int32 `protobuf:"varint,8,opt,name=completed_tests,json=completedTests,proto3" json:"completed_tests,omitempty"`
	AmountTests           int32 `protobuf:"varint,9,opt,name=amount_tests,json=amountTests,proto3" json:"amount_tests,omitempty"`
	CompletedQuestions    int32 `protobuf:"varint,10,opt,name=completed_questions,json=completedQuestions,proto3" json:"completed_questions,omitempty"`
	AmountQuestions       int32 `protobuf:"varint,11,opt,name=amount_questions,json=amountQuestions,proto3" json:"amount_questions,omitempty"`
}

func (x *GetStatisticResponse) Reset() {
	*x = GetStatisticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_course_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticResponse) ProtoMessage() {}

func (x *GetStatisticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_course_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticResponse.ProtoReflect.Descriptor instead.
func (*GetStatisticResponse) Descriptor() ([]byte, []int) {
	return file_course_proto_rawDescGZIP(), []int{60}
}

func (x *GetStatisticResponse) GetPercentage() int32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *GetStatisticResponse) GetCompletedTextLessons() int32 {
	if x != nil {
		return x.CompletedTextLessons
	}
	return 0
}

func (x *GetStatisticResponse) GetAmountTextLessons() int32 {
	if x != nil {
		return x.AmountTextLessons
	}
	return 0
}

func (x *GetStatisticResponse) GetCompletedVideoLessons() int32 {
	if x != nil {
		return x.CompletedVideoLessons
	}
	return 0
}

func (x *GetStatisticResponse) GetAmountVideoLessons() int32 {
	if x != nil {
		return x.AmountVideoLessons
	}
	return 0
}

func (x *GetStatisticResponse) GetReceivedPoints() int32 {
	if x != nil {
		return x.ReceivedPoints
	}
	return 0
}

func (x *GetStatisticResponse) GetAmountPoints() int32 {
	if x != nil {
		return x.AmountPoints
	}
	return 0
}

func (x *GetStatisticResponse) GetCompletedTests() int32 {
	if x != nil {
		return x.CompletedTests
	}
	return 0
}

func (x *GetStatisticResponse) GetAmountTests() int32 {
	if x != nil {
		return x.AmountTests
	}
	return 0
}

func (x *GetStatisticResponse) GetCompletedQuestions() int32 {
	if x != nil {
		return x.CompletedQuestions
	}
	return 0
}

func (x *GetStatisticResponse) GetAmountQuestions() int32 {
	if x != nil {
		return x.AmountQuestions
	}
	return 0
}

var File_course_proto protoreflect.FileDescriptor

var file_course_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xee, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x6f, 0x50, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x63, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x63, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x92,
	0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x54,
	0x4f, 0x52, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x54, 0x4f,
	0x52, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x1f, 0x4d, 0x61, 0x72, 0x6b,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x73, 0x4e, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x54, 0x0a, 0x1c, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1c, 0x4d, 0x61, 0x72, 0x6b, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x41, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x6f, 0x61, 0x64, 0x6d, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x4e,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x6f, 0x61, 0x64, 0x6d,
	0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x6f,
	0x61, 0x64, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x6f, 0x61, 0x64, 0x6d,
	0x61, 0x70, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x72, 0x6f, 0x61, 0x64, 0x6d, 0x61, 0x70, 0x22, 0x67,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x54, 0x4f, 0x52,
	0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x54,
	0x4f, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0x7b, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x86,
	0x01, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x44, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0xb2, 0x03,
	0x0a, 0x09, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x50, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x44, 0x54, 0x4f, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x22, 0x3f, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x6f, 0x61, 0x64,
	0x6d, 0x61, 0x70, 0x44, 0x54, 0x4f, 0x12, 0x2b, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x44, 0x54, 0x4f, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x69, 0x0a,
	0x0f, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x54, 0x4f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x54, 0x4f, 0x52,
	0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e,
	0x65, 0x22, 0x67, 0x0a, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x12, 0x2f,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x74,
	0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x74, 0x6f,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xc2, 0x01, 0x0a, 0x0f, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74,
	0x12, 0x26, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0x32, 0x0a, 0x04, 0x50, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x34, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x51, 0x0a, 0x05, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x22, 0x5e, 0x0a, 0x0d,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x25, 0x0a,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x46, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x22, 0x1b, 0x0a, 0x05,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x46, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x53, 0x72, 0x63, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x31, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x09, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x5f, 0x0a, 0x0d, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0x77, 0x0a, 0x07, 0x54, 0x65,
	0x73, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x22, 0x65, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x44, 0x54, 0x4f, 0x52, 0x07, 0x54, 0x65, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x32, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x22, 0x87, 0x01, 0x0a, 0x11, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x51, 0x75, 0x69, 0x7a, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x12, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0x54, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x44, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x99, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x15, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x71,
	0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x4d, 0x0a, 0x0a,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x5d, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x4b, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0xfc, 0x03, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65,
	0x78, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2f, 0x0a,
	0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x90, 0x0f, 0x0a, 0x0d, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12,
	0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12,
	0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12,
	0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x18, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x41, 0x73, 0x4e, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x27, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x41, 0x73, 0x4e, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x55, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x41, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x15, 0x4d, 0x61, 0x72, 0x6b,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x41, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x41, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x55, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x6f, 0x61, 0x64,
	0x6d, 0x61, 0x70, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x6f, 0x61, 0x64, 0x6d, 0x61, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x6f, 0x61, 0x64, 0x6d, 0x61, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x54, 0x6f, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1e,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x46, 0x61, 0x76,
	0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x1c,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73,
	0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a,
	0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x3b, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_course_proto_rawDescOnce sync.Once
	file_course_proto_rawDescData = file_course_proto_rawDesc
)

func file_course_proto_rawDescGZIP() []byte {
	file_course_proto_rawDescOnce.Do(func() {
		file_course_proto_rawDescData = protoimpl.X.CompressGZIP(file_course_proto_rawDescData)
	})
	return file_course_proto_rawDescData
}

var file_course_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_course_proto_goTypes = []interface{}{
	(*Course)(nil),                            // 0: course.Course
	(*CoursePart)(nil),                        // 1: course.CoursePart
	(*LessonBucket)(nil),                      // 2: course.LessonBucket
	(*LessonPoint)(nil),                       // 3: course.LessonPoint
	(*GetBucketCoursesRequest)(nil),           // 4: course.GetBucketCoursesRequest
	(*GetBucketCoursesResponse)(nil),          // 5: course.GetBucketCoursesResponse
	(*GetCourseLessonRequest)(nil),            // 6: course.GetCourseLessonRequest
	(*GetCourseLessonResponse)(nil),           // 7: course.GetCourseLessonResponse
	(*GetNextLessonRequest)(nil),              // 8: course.GetNextLessonRequest
	(*GetNextLessonResponse)(nil),             // 9: course.GetNextLessonResponse
	(*MarkLessonAsNotCompletedRequest)(nil),   // 10: course.MarkLessonAsNotCompletedRequest
	(*MarkLessonAsCompletedRequest)(nil),      // 11: course.MarkLessonAsCompletedRequest
	(*MarkCourseAsCompletedRequest)(nil),      // 12: course.MarkCourseAsCompletedRequest
	(*GetCourseRoadmapRequest)(nil),           // 13: course.GetCourseRoadmapRequest
	(*GetCourseRoadmapResponse)(nil),          // 14: course.GetCourseRoadmapResponse
	(*GetCourseRequest)(nil),                  // 15: course.GetCourseRequest
	(*GetCourseResponse)(nil),                 // 16: course.GetCourseResponse
	(*CreateCourseRequest)(nil),               // 17: course.CreateCourseRequest
	(*AddToFavouritesRequest)(nil),            // 18: course.AddToFavouritesRequest
	(*DeleteCourseFromFavouritesRequest)(nil), // 19: course.DeleteCourseFromFavouritesRequest
	(*GetFavouritesRequest)(nil),              // 20: course.GetFavouritesRequest
	(*GetFavouritesResponse)(nil),             // 21: course.GetFavouritesResponse
	(*CourseDTO)(nil),                         // 22: course.CourseDTO
	(*CourseRoadmapDTO)(nil),                  // 23: course.CourseRoadmapDTO
	(*CoursePartDTO)(nil),                     // 24: course.CoursePartDTO
	(*LessonBucketDTO)(nil),                   // 25: course.LessonBucketDTO
	(*LessonPointDTO)(nil),                    // 26: course.LessonPointDTO
	(*LessonDTO)(nil),                         // 27: course.LessonDTO
	(*LessonDtoHeader)(nil),                   // 28: course.LessonDtoHeader
	(*Part)(nil),                              // 29: course.Part
	(*Bucket)(nil),                            // 30: course.Bucket
	(*Point)(nil),                             // 31: course.Point
	(*LessonDtoBody)(nil),                     // 32: course.LessonDtoBody
	(*Block)(nil),                             // 33: course.Block
	(*Footer)(nil),                            // 34: course.Footer
	(*UserProfile)(nil),                       // 35: course.UserProfile
	(*GetVideoUrlRequest)(nil),                // 36: course.GetVideoUrlRequest
	(*GetVideoUrlResponse)(nil),               // 37: course.GetVideoUrlResponse
	(*GetMetaRequest)(nil),                    // 38: course.GetMetaRequest
	(*VideoMeta)(nil),                         // 39: course.VideoMeta
	(*GetFragmentRequest)(nil),                // 40: course.GetFragmentRequest
	(*VideoFragment)(nil),                     // 41: course.VideoFragment
	(*AnswerTestDTO)(nil),                     // 42: course.AnswerTestDTO
	(*TestDTO)(nil),                           // 43: course.TestDTO
	(*UserAnswer)(nil),                        // 44: course.UserAnswer
	(*GetTestLessonRequest)(nil),              // 45: course.GetTestLessonRequest
	(*GetTestLessonResponse)(nil),             // 46: course.GetTestLessonResponse
	(*AnswerQuizRequest)(nil),                 // 47: course.AnswerQuizRequest
	(*AnswerQuizResponse)(nil),                // 48: course.AnswerQuizResponse
	(*GetQuestionTestLessonRequest)(nil),      // 49: course.GetQuestionTestLessonRequest
	(*UserAnswerQuestion)(nil),                // 50: course.UserAnswerQuestion
	(*GetQuestionTestLessonResponse)(nil),     // 51: course.GetQuestionTestLessonResponse
	(*AnswerQuestionRequest)(nil),             // 52: course.AnswerQuestionRequest
	(*SearchCoursesByTitleRequest)(nil),       // 53: course.SearchCoursesByTitleRequest
	(*GetRatingRequest)(nil),                  // 54: course.GetRatingRequest
	(*GetRatingResponse)(nil),                 // 55: course.GetRatingResponse
	(*RatingItem)(nil),                        // 56: course.RatingItem
	(*GetSertificateRequest)(nil),             // 57: course.GetSertificateRequest
	(*GetSertificateResponse)(nil),            // 58: course.GetSertificateResponse
	(*GetStatisticRequest)(nil),               // 59: course.GetStatisticRequest
	(*GetStatisticResponse)(nil),              // 60: course.GetStatisticResponse
	(*emptypb.Empty)(nil),                     // 61: google.protobuf.Empty
}
var file_course_proto_depIdxs = []int32{
	1,  // 0: course.Course.parts:type_name -> course.CoursePart
	2,  // 1: course.CoursePart.buckets:type_name -> course.LessonBucket
	3,  // 2: course.LessonBucket.lessons:type_name -> course.LessonPoint
	35, // 3: course.GetBucketCoursesRequest.user_profile:type_name -> course.UserProfile
	22, // 4: course.GetBucketCoursesResponse.courses:type_name -> course.CourseDTO
	27, // 5: course.GetCourseLessonResponse.lesson:type_name -> course.LessonDTO
	27, // 6: course.GetNextLessonResponse.lesson:type_name -> course.LessonDTO
	23, // 7: course.GetCourseRoadmapResponse.roadmap:type_name -> course.CourseRoadmapDTO
	35, // 8: course.GetCourseRequest.user_profile:type_name -> course.UserProfile
	22, // 9: course.GetCourseResponse.course:type_name -> course.CourseDTO
	22, // 10: course.CreateCourseRequest.course:type_name -> course.CourseDTO
	35, // 11: course.CreateCourseRequest.user_profile:type_name -> course.UserProfile
	22, // 12: course.AddToFavouritesRequest.course:type_name -> course.CourseDTO
	35, // 13: course.AddToFavouritesRequest.user_profile:type_name -> course.UserProfile
	22, // 14: course.DeleteCourseFromFavouritesRequest.course:type_name -> course.CourseDTO
	35, // 15: course.DeleteCourseFromFavouritesRequest.user_profile:type_name -> course.UserProfile
	35, // 16: course.GetFavouritesRequest.user_profile:type_name -> course.UserProfile
	22, // 17: course.GetFavouritesResponse.courses:type_name -> course.CourseDTO
	24, // 18: course.CourseDTO.parts:type_name -> course.CoursePartDTO
	24, // 19: course.CourseRoadmapDTO.parts:type_name -> course.CoursePartDTO
	25, // 20: course.CoursePartDTO.buckets:type_name -> course.LessonBucketDTO
	26, // 21: course.LessonBucketDTO.lessons:type_name -> course.LessonPointDTO
	28, // 22: course.LessonDTO.header:type_name -> course.LessonDtoHeader
	32, // 23: course.LessonDTO.body:type_name -> course.LessonDtoBody
	29, // 24: course.LessonDtoHeader.part:type_name -> course.Part
	30, // 25: course.LessonDtoHeader.bucket:type_name -> course.Bucket
	31, // 26: course.LessonDtoHeader.points:type_name -> course.Point
	33, // 27: course.LessonDtoBody.blocks:type_name -> course.Block
	34, // 28: course.LessonDtoBody.footer:type_name -> course.Footer
	42, // 29: course.TestDTO.answers:type_name -> course.AnswerTestDTO
	43, // 30: course.GetTestLessonResponse.TestDTO:type_name -> course.TestDTO
	44, // 31: course.GetTestLessonResponse.UserAnswer:type_name -> course.UserAnswer
	50, // 32: course.GetQuestionTestLessonResponse.user_answer:type_name -> course.UserAnswerQuestion
	35, // 33: course.SearchCoursesByTitleRequest.user_profile:type_name -> course.UserProfile
	56, // 34: course.GetRatingResponse.rating:type_name -> course.RatingItem
	35, // 35: course.RatingItem.user:type_name -> course.UserProfile
	35, // 36: course.GetSertificateRequest.user:type_name -> course.UserProfile
	4,  // 37: course.CourseService.GetBucketCourses:input_type -> course.GetBucketCoursesRequest
	4,  // 38: course.CourseService.GetPurchasedBucketCourses:input_type -> course.GetBucketCoursesRequest
	4,  // 39: course.CourseService.GetCompletedBucketCourses:input_type -> course.GetBucketCoursesRequest
	6,  // 40: course.CourseService.GetCourseLesson:input_type -> course.GetCourseLessonRequest
	8,  // 41: course.CourseService.GetNextLesson:input_type -> course.GetNextLessonRequest
	10, // 42: course.CourseService.MarkLessonAsNotCompleted:input_type -> course.MarkLessonAsNotCompletedRequest
	11, // 43: course.CourseService.MarkLessonAsCompleted:input_type -> course.MarkLessonAsCompletedRequest
	12, // 44: course.CourseService.MarkCourseAsCompleted:input_type -> course.MarkCourseAsCompletedRequest
	13, // 45: course.CourseService.GetCourseRoadmap:input_type -> course.GetCourseRoadmapRequest
	15, // 46: course.CourseService.GetCourse:input_type -> course.GetCourseRequest
	54, // 47: course.CourseService.GetRating:input_type -> course.GetRatingRequest
	59, // 48: course.CourseService.GetStatistic:input_type -> course.GetStatisticRequest
	57, // 49: course.CourseService.GetSertificate:input_type -> course.GetSertificateRequest
	57, // 50: course.CourseService.GetGeneratedSertificate:input_type -> course.GetSertificateRequest
	17, // 51: course.CourseService.CreateCourse:input_type -> course.CreateCourseRequest
	18, // 52: course.CourseService.AddCourseToFavourites:input_type -> course.AddToFavouritesRequest
	19, // 53: course.CourseService.DeleteCourseFromFavourites:input_type -> course.DeleteCourseFromFavouritesRequest
	20, // 54: course.CourseService.GetFavouriteCourses:input_type -> course.GetFavouritesRequest
	45, // 55: course.CourseService.GetTestLesson:input_type -> course.GetTestLessonRequest
	47, // 56: course.CourseService.AnswerQuiz:input_type -> course.AnswerQuizRequest
	49, // 57: course.CourseService.GetQuestionTestLesson:input_type -> course.GetQuestionTestLessonRequest
	52, // 58: course.CourseService.AnswerQuestion:input_type -> course.AnswerQuestionRequest
	53, // 59: course.CourseService.SearchCoursesByTitle:input_type -> course.SearchCoursesByTitleRequest
	5,  // 60: course.CourseService.GetBucketCourses:output_type -> course.GetBucketCoursesResponse
	5,  // 61: course.CourseService.GetPurchasedBucketCourses:output_type -> course.GetBucketCoursesResponse
	5,  // 62: course.CourseService.GetCompletedBucketCourses:output_type -> course.GetBucketCoursesResponse
	7,  // 63: course.CourseService.GetCourseLesson:output_type -> course.GetCourseLessonResponse
	9,  // 64: course.CourseService.GetNextLesson:output_type -> course.GetNextLessonResponse
	61, // 65: course.CourseService.MarkLessonAsNotCompleted:output_type -> google.protobuf.Empty
	61, // 66: course.CourseService.MarkLessonAsCompleted:output_type -> google.protobuf.Empty
	61, // 67: course.CourseService.MarkCourseAsCompleted:output_type -> google.protobuf.Empty
	14, // 68: course.CourseService.GetCourseRoadmap:output_type -> course.GetCourseRoadmapResponse
	16, // 69: course.CourseService.GetCourse:output_type -> course.GetCourseResponse
	55, // 70: course.CourseService.GetRating:output_type -> course.GetRatingResponse
	60, // 71: course.CourseService.GetStatistic:output_type -> course.GetStatisticResponse
	58, // 72: course.CourseService.GetSertificate:output_type -> course.GetSertificateResponse
	58, // 73: course.CourseService.GetGeneratedSertificate:output_type -> course.GetSertificateResponse
	61, // 74: course.CourseService.CreateCourse:output_type -> google.protobuf.Empty
	61, // 75: course.CourseService.AddCourseToFavourites:output_type -> google.protobuf.Empty
	61, // 76: course.CourseService.DeleteCourseFromFavourites:output_type -> google.protobuf.Empty
	21, // 77: course.CourseService.GetFavouriteCourses:output_type -> course.GetFavouritesResponse
	46, // 78: course.CourseService.GetTestLesson:output_type -> course.GetTestLessonResponse
	48, // 79: course.CourseService.AnswerQuiz:output_type -> course.AnswerQuizResponse
	51, // 80: course.CourseService.GetQuestionTestLesson:output_type -> course.GetQuestionTestLessonResponse
	61, // 81: course.CourseService.AnswerQuestion:output_type -> google.protobuf.Empty
	5,  // 82: course.CourseService.SearchCoursesByTitle:output_type -> course.GetBucketCoursesResponse
	60, // [60:83] is the sub-list for method output_type
	37, // [37:60] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_course_proto_init() }
func file_course_proto_init() {
	if File_course_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_course_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoursePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkLessonAsNotCompletedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkLessonAsCompletedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkCourseAsCompletedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseRoadmapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseRoadmapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToFavouritesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCourseFromFavouritesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavouritesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFavouritesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseRoadmapDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoursePartDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonBucketDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonPointDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonDtoHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LessonDtoBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Footer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFragmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerTestDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerQuizRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerQuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionTestLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAnswerQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuestionTestLessonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCoursesByTitleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_course_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatisticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_course_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_course_proto_goTypes,
		DependencyIndexes: file_course_proto_depIdxs,
		MessageInfos:      file_course_proto_msgTypes,
	}.Build()
	File_course_proto = out.File
	file_course_proto_rawDesc = nil
	file_course_proto_goTypes = nil
	file_course_proto_depIdxs = nil
}
