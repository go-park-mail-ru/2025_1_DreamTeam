name: Run golangci-lint, tests and deploy

on:
  push:
    branches: [ "main", "master", "microservices" ]
  pull_request:
    branches: [ "main", "master", "microservices" ]

jobs:
  lint-and-test-all:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          "SkillForceBillingService",
          "SkillForceCourseService",
          "SkillForceMailService",
          "SkillForceMainService",
          "SkillForceUserService"
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build golangci-lint docker image for ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          docker build -f ../Dockerfile.golangci-lint -t golangci-lint:1.23 .
      
      - name: Run golangci-lint on ${{ matrix.service }}
        run: |
          docker run --rm golangci-lint:1.23
      
      - name: Run tests for ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          go test -coverpkg=./... -coverprofile=cover.out.tmp ./...
          grep -v "mock" cover.out.tmp > cover.out
          go tool cover -func=cover.out
  
  deploy:
    if: github.ref == 'refs/heads/microservices'
    runs-on: ubuntu-latest
    needs: lint-and-test-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo bash
            cd deploy/2025_1_DreamTeam/

            echo "Updating code..."
            git pull origin microservices

            echo "Writing .env files..."
            echo "Writing .env files..."
            cat <<EOF > SkillForceMainService/config/.env
          ${{ secrets.ENV_MAIN }}
          EOF
            cat <<EOF > SkillForceUserService/config/.env
          ${{ secrets.ENV_USER }}
          EOF
            cat <<EOF > SkillForceCourseService/config/.env
          ${{ secrets.ENV_COURSE }}
          EOF
            cat <<EOF > SkillForceBillingService/config/.env
          ${{ secrets.ENV_BILLING }}
          EOF
            cat <<EOF > SkillForceMailService/config/.env
          ${{ secrets.ENV_MAIL }}
          EOF

            echo "Rebuilding and restarting services..."
            docker compose build main-service user-service course-service billing-service mail-service
            docker compose up -d main-service user-service course-service billing-service mail-service
